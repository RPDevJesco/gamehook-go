# Build stage
FROM golang:1.21-alpine AS builder

# Install build dependencies
RUN apk add --no-cache git ca-certificates tzdata

# Set working directory
WORKDIR /app

# Copy go mod files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY . .

# Build the application
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -ldflags '-extldflags "-static"' -o gamehook ./cmd/gamehook

# Final stage
FROM alpine:latest

# Install runtime dependencies
RUN apk --no-cache add ca-certificates tzdata

# Create non-root user
RUN addgroup -g 1001 -S gamehook && \
    adduser -u 1001 -S gamehook -G gamehook

# Set working directory
WORKDIR /app

# Copy binary from builder stage
COPY --from=builder /app/gamehook .

# Copy mappers and UIs
COPY --chown=gamehook:gamehook mappers/ ./mappers/
COPY --chown=gamehook:gamehook uis/ ./uis/

# Create directories for user data
RUN mkdir -p /app/data/mappers /app/data/uis && \
    chown -R gamehook:gamehook /app

# Switch to non-root user
USER gamehook

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:8080/ || exit 1

# Set default command
CMD ["./gamehook", "--port", "8080", "--retroarch-host", "host.docker.internal"]

# Labels for metadata
LABEL maintainer="GameHook Go Team"
LABEL description="GameHook Go - Retro game memory manipulation tool"
LABEL version="1.0.0"